% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{run_redist_gsmc}
\alias{run_redist_gsmc}
\title{Run Optimalgsmc with Merge Split}
\usage{
run_redist_gsmc(
  nsims,
  total_seats,
  ndists,
  district_seat_sizes,
  initial_num_regions,
  adj_list,
  counties,
  pop,
  step_types,
  target,
  lower,
  upper,
  rho,
  sampling_space_str,
  control,
  constraints,
  verbosity,
  diagnostic_level,
  region_id_mat,
  region_sizes_mat
)
}
\arguments{
\item{nsims}{The number of plans (samples) to draw}

\item{ndists}{The number of districts the final plans will have}

\item{adj_list}{A 0-indexed adjacency list representing the undirected graph
which represents the underlying map the plans are to be drawn on}

\item{counties}{Vector of county labels of each vertex in \code{g}}

\item{pop}{A vector of the population associated with each vertex in \code{g}}

\item{target}{Ideal population of a valid district. This is what deviance is calculated
relative to}

\item{lower}{Acceptable lower bounds on a valid district's population}

\item{upper}{Acceptable upper bounds on a valid district's population}

\item{control}{Named list of additional parameters.}

\item{verbosity}{What level of detail to print out while the algorithm is
running \if{html}{\out{<ADD OPTIONS>}}}

\item{k_param}{The k parameter from the SMC algorithm, you choose among the top k_param edges}

\item{num_threads}{The number of threads the threadpool should use}
}
\description{
Uses gsmc method with optimal weights and merge split steps to generate a sample of \code{M} plans in \verb{c++}
}
\details{
Using the procedure outlined in \if{html}{\out{<PAPER HERE>}} this function uses Sequential
Monte Carlo (SMC) methods to generate a sample of \code{M} plans
}
\keyword{internal}
