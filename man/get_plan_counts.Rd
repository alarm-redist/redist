% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{get_plan_counts}
\alias{get_plan_counts}
\title{Count how many times each plan appears in a plans matrix}
\usage{
get_plan_counts(
  input_plans_mat,
  num_regions,
  use_canonical_ordering = TRUE,
  num_threads = 0L
)
}
\arguments{
\item{num_regions}{The number of regions in the plan}

\item{use_canonical_ordering}{Whether or not to reorder the plans using the
canonical ordering on plans.}

\item{num_threads}{The number of threads to use. Defaults to number of machine threads.}

\item{plans_mat}{A matrix of 1-indexed plans}
}
\value{
A list mapping plans (stored as a string concatened vector) to
how many times they appear in the matrix
}
\description{
Given a matrix of 1-indexed plans (or partial plans) this function
returns a list mapping plan vectors as a giant concatened string to
the count of how many times the plan appears.
}
\details{
If \code{use_canonical_ordering} is set to true then the plans will be
reordered using the canonical reordering function
\code{get_canonical_plan_labelling}. This guarantees that the same plan
will not be incorrectly counted if there are different permutations
of its labels. If \code{use_canonical_ordering} is not set to true then
its possible the count will be incorrect because of different
permutations of the same underlying plan.

Modifications
\itemize{
\item None
}
}
\keyword{internal}
